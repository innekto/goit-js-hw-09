{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CASdC,SAASC,cAAc,SAC/BC,iBAAiB,UAIV,SAAQC,GACpBA,EAAMC,iBACN,MAAMP,MAAEA,EAAKQ,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,cAAcC,UAQ9B,SAADX,EAAOQ,EAAMC,GAClCG,EAAYZ,MAAQa,OAAOb,EAAMc,OACjCF,EAAYJ,KAAOK,OAAOL,EAAKM,OAC/BF,EAAYH,OAASI,OAAOJ,EAAOK,M,EARnCC,CAAcf,EAAOQ,EAAMC,GA0B7B,WACE,IAAKO,EAAI,EAAGA,GAAKJ,EAAYH,OAAQO,GAAK,EACxClB,EAAckB,EAAGJ,EAAYZ,OAC1BiB,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAsB,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAE9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAsB,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAEhEY,EAAYZ,OAASY,EAAYJ,I,CAlCnCc,E,IATF,MAAMV,EAAc,GAoBL,SAANd,EAAcC,EAAUC,GAC/B,OAAO,IAAIuB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBzB,KAAKC,SAAW,GACtCyB,YAAW,KACLD,EACFF,EAAQ,C,SAAEzB,E,MAAUC,IAEpByB,EAAO,C,SAAE1B,E,MAAUC,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst fromEl = document.querySelector('.form');\nfromEl.addEventListener('submit', onFormSubmit);\nconst inputValues = {};\n\n//сабмітимо форму\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  // console.log(delay, step, amount);\n  // console.log(event.currentTarget.elements);\n  getInputValue(delay, step, amount);\n  promisesCycle();\n}\n\n//отримуємо значення інпутів\nfunction getInputValue(delay, step, amount) {\n  inputValues.delay = Number(delay.value);\n  inputValues.step = Number(step.value);\n  inputValues.amount = Number(amount.value);\n}\n\n//створюємо проміс\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//оновлюємо проміси циклом\nfunction promisesCycle() {\n  for (i = 1; i <= inputValues.amount; i += 1) {\n    createPromise(i, inputValues.delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    inputValues.delay += inputValues.step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","document","querySelector","addEventListener","event","preventDefault","step","amount","currentTarget","elements","$47d4ff9957288465$var$inputValues","Number","value","$47d4ff9957288465$var$getInputValue","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$promisesCycle","Promise","resolve","reject","shouldResolve","setTimeout"],"version":3,"file":"03-promises.54c5e30a.js.map"}