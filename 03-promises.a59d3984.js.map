{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAE/BC,iBAAiB,UAKV,SAAQC,GACpBA,EAAMC,iBACN,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,UAQ9B,SAADJ,EAAOC,EAAMC,GAClCG,EAAYL,MAAQM,OAAON,EAAMO,OACjCF,EAAYJ,KAAOK,OAAOL,EAAKM,OAC/BF,EAAYH,OAASI,OAAOJ,EAAOK,M,EARnCC,CAAcR,EAAOC,EAAMC,GA0B7B,WACE,IAAK,IAAIO,EAAI,EAAGA,GAAKJ,EAAYH,OAAQO,GAAK,EAC5CC,EAAcD,EAAGJ,EAAYL,OAC1BW,MAAK,EAACC,SAAEA,EAAQZ,MAAEA,MACjBP,EAAAoB,OAAOC,QAAQ,qBAAqBF,QAAeZ,MAAU,IAE9De,OAAM,EAACH,SAAEA,EAAQZ,MAAEA,MAClBP,EAAAoB,OAAOG,QAAQ,oBAAoBJ,QAAeZ,MAAU,IAEhEK,EAAYL,OAASK,EAAYJ,I,CAlCnCgB,E,IATF,MAAMZ,EAAc,GAoBL,SAANK,EAAcE,EAAUZ,GAC/B,OAAO,IAAIkB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUZ,IAEpBoB,EAAO,C,SAAER,E,MAAUZ,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst fromEl = document.querySelector('.form');\n\nfromEl.addEventListener('submit', onFormSubmit);\n\nconst inputValues = {};\n\n//сабмітимо форму\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  // console.log(delay, step, amount);\n  // console.log(event.currentTarget.elements);\n  getInputValue(delay, step, amount);\n  promisesCycle();\n}\n\n//отримуємо значення інпутів\nfunction getInputValue(delay, step, amount) {\n  inputValues.delay = Number(delay.value);\n  inputValues.step = Number(step.value);\n  inputValues.amount = Number(amount.value);\n}\n\n//створюємо проміс\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//оновлюємо проміси циклом\nfunction promisesCycle() {\n  for (let i = 1; i <= inputValues.amount; i += 1) {\n    createPromise(i, inputValues.delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    inputValues.delay += inputValues.step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","step","amount","currentTarget","elements","$47d4ff9957288465$var$inputValues","Number","value","$47d4ff9957288465$var$getInputValue","i","$47d4ff9957288465$var$createPromise","then","position","Notify","success","catch","failure","$47d4ff9957288465$var$promisesCycle","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.a59d3984.js.map"}